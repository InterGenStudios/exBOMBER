#!/bin/bash
# exBOMBER
# -------------------------------------------------------
# exBOMBER: A linux server hack/exploit-finder suite
# version: .01
# Github: https://github.com/InterGenStudios/exBOMBER
# ---------------------------------------------------
# InterGenStudios: 7-25-15
# Copyright (c) 2015: Christopher 'InterGen' Cork  InterGenStudios
# --------------------------------
# License: GPL-2.0+
# URL: http://opensource.org/licenses/gpl-license.php
# ---------------------------------------------------
# exBOMBER is free software:
# You may redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software
# Foundation, either version 2 of the License, or (at your discretion)
# any later version.
# ------------------


# To Do List
#-----------
# NEED TO DEVELOP PHP_SITE_SCAN RE: http://www.gregfreeman.org/2013/how-to-tell-if-your-php-site-has-been-compromised/

###########################################
##---------------------------------------##
## BEGIN - INITIAL VARIABLE DECLARATIONS ##
##---------------------------------------##
###########################################

# Set timestamp
TIMESTAMP="$(date +"%m-%d-%Y:%T")"

# Set colors for terminal display
RED="\e[1m\e[31m"
GREEN="\e[1m\e[32m"
YELLOW="\e[1m\e[33m"
BLUE="\e[1m\e[34m"
CYAN="\e[1m\e[36m"
WHITE="\e[1m\e[37m"
NOCOLOR="\e[0m"
BLINK="\e[5m"
UNDERLINE_TEXT="\e[4m"

#########################################
##-------------------------------------##
## END - INITIAL VARIABLE DECLARATIONS ##
##-------------------------------------##
#########################################

##############################
##--------------------------##
## BEGIN - SCRIPT FUNCTIONS ##
##--------------------------##
##############################

#----------------------------------#
# BEGIN - DISPLAY LAYOUT FUNCTIONS #
#----------------------------------#

# Simple divider
DIVIDER () {

    echo -e "\n${BLUE}---------------------------------------------------------${NOCOLOR}\n"

}

# Creates uniform look during script execution when called after any clear command
HEADER () {

    echo -e "\n${BLUE}====================================================================================${NOCOLOR}"
    echo -e "${BLUE}===[ ${WHITE}ex${CYAN}BOMBER ${WHITE}version${GREEN}.01 ${BLUE}]================================[ ${WHITE}$TIMESTAMP ${BLUE}]===${NOCOLOR}"
    echo -e "${BLUE}====================================================================================${NOCOLOR}\n\n"

}

#--------------------------------#
# END - DISPLAY LAYOUT FUNCTIONS #
#--------------------------------#

# Initial Menu screen to get scan type
GET_INSTRUCTIONS () {

    clear
    HEADER
    echo -e "    ${GREEN}${UNDERLINE_TEXT}Select Scanner${NOCOLOR}:\n\n\n"
    echo -e "    ${WHITE}1) ${GREEN}Findbot.pl      ${NOCOLOR}(${WHITE}1-i${NOCOLOR} for info)\n"
    echo -e "    ${WHITE}2) ${GREEN}Maldet          ${NOCOLOR}(${WHITE}2-i${NOCOLOR} for info)\n"
    echo -e "    ${WHITE}3) ${GREEN}PHP Site Scan   ${NOCOLOR}(${WHITE}3-i${NOCOLOR} for info)\n"
    echo -e "    ${WHITE}4) ${GREEN}Findcrack0r.pl  ${NOCOLOR}(${WHITE}4-i${NOCOLOR} for info)\n\n"
    echo -e -n "    [${WHITE}${UNDERLINE_TEXT}Enter Sanner Selection${NOCOLOR}(q for quit)]: "
    read -r get_instructions
    case $get_instructions in

        1) mkdir -p /root/support/exBOMBER/tmp # Create tmp directory for files created during execution
           echo SCAN_TYPE = FB > /root/support/exBOMBER/tmp/scan_config # scan_config will be used to transfer subshell-created variables into the parent shell
           SCAN_TYPE=FB
           # Create logging directory
           mkdir -p /var/log/exb_logs/findbot
           CHECK_FOR_FINDBOT 2>&1 | tee /var/log/exb_logs/findbot/chk_fbt_"$TIMESTAMP"
           # sed command to remove messy terminal color variables from logs
           sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|(B\[m||g' -e 's|\[H\[2J||g' -e 's|\[1m\[31m||g' -e 's|\[1m\[32m||g' \
           -e 's|\[1m\[33m||g' -e 's|\[1m\[34m||g' -e 's|\[1m\[35m||g' -e 's|\[1m\[36m||g' -e 's|\[1m\[37m||g' \
           -e 's|\[4m||g' -e 's|\[5m||g' -e 's|\[5A\[K||g' -e 's|\[0m||g' -e 's|\[1A\[K||g' -e 's|\[2A\[K||g' /var/log/exb_logs/findbot/chk_fbt_"$TIMESTAMP"
           EXEC_FINDBOT 2>&1 | tee /var/log/exb_logs/findbot/exec_fbt_"$TIMESTAMP"
           # sed command to remove messy terminal color variables from logs
           sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|(B\[m||g' -e 's|\[H\[2J||g' -e 's|\[1m\[31m||g' -e 's|\[1m\[32m||g' \
           -e 's|\[1m\[33m||g' -e 's|\[1m\[34m||g' -e 's|\[1m\[35m||g' -e 's|\[1m\[36m||g' -e 's|\[1m\[37m||g' \
           -e 's|\[4m||g' -e 's|\[5m||g' -e 's|\[5A\[K||g' -e 's|\[0m||g' -e 's|\[1A\[K||g' -e 's|\[2A\[K||g' /var/log/exb_logs/findbot/exec_fbt_"$TIMESTAMP"
           ;;
        2) mkdir -p /root/support/exBOMBER/tmp # Create tmp directory for files created during execution
           echo SCAN_TYPE = MD > /root/support/exBOMBER/tmp/scan_config # scan_config will be used to transfer subshell-created variables into the parent shell
           SCAN_TYPE=MD
           # Create logging directory
           mkdir -p /var/log/exb_logs/maldet
           CHECK_FOR_MALDET 2>&1 | tee /var/log/exb_logs/maldet/chk_mldt_"$TIMESTAMP"
           # sed command to remove messy terminal color variables from logs
           sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|(B\[m||g' -e 's|\[H\[2J||g' -e 's|\[1m\[31m||g' -e 's|\[1m\[32m||g' \
           -e 's|\[1m\[33m||g' -e 's|\[1m\[34m||g' -e 's|\[1m\[35m||g' -e 's|\[1m\[36m||g' -e 's|\[1m\[37m||g' \
           -e 's|\[4m||g' -e 's|\[5m||g' -e 's|\[5A\[K||g' -e 's|\[0m||g' -e 's|\[1A\[K||g' -e 's|\[2A\[K||g' /var/log/exb_logs/maldet/chk_mldt_"$TIMESTAMP"
           EXEC_MALDET 2>&1 | tee /var/log/exb_logs/maldet/exec_mldt_"$TIMESTAMP"
           # sed command to remove messy terminal color variables from logs
           sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|(B\[m||g' -e 's|\[H\[2J||g' -e 's|\[1m\[31m||g' -e 's|\[1m\[32m||g' \
           -e 's|\[1m\[33m||g' -e 's|\[1m\[34m||g' -e 's|\[1m\[35m||g' -e 's|\[1m\[36m||g' -e 's|\[1m\[37m||g' \
           -e 's|\[4m||g' -e 's|\[5m||g' -e 's|\[5A\[K||g' -e 's|\[0m||g' -e 's|\[1A\[K||g' -e 's|\[2A\[K||g' /var/log/exb_logs/maldet/exec_mldt_"$TIMESTAMP"
           ;;
        3) mkdir -p /root/support/exBOMBER/tmp # Create tmp directory for files created during execution
           echo SCAN_TYPE = PS > /root/support/exBOMBER/tmp/scan_config # scan_config will be used to transfer subshell-created variables into the parent shell
           SCAN_TYPE=PS
           # Create logging directory
           mkdir -p /var/log/exb_logs/php_scan
           EXEC_PHP_SITE_SCAN 2>&1 | tee /var/log/exb_logs/php_scan/site_scan_"$TIMESTAMP"
           # sed command to remove messy terminal color variables from logs
           sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|(B\[m||g' -e 's|\[H\[2J||g' -e 's|\[1m\[31m||g' -e 's|\[1m\[32m||g' \
           -e 's|\[1m\[33m||g' -e 's|\[1m\[34m||g' -e 's|\[1m\[35m||g' -e 's|\[1m\[36m||g' -e 's|\[1m\[37m||g' \
           -e 's|\[4m||g' -e 's|\[5m||g' -e 's|\[5A\[K||g' -e 's|\[0m||g' -e 's|\[1A\[K||g' -e 's|\[2A\[K||g' /var/log/exb_logs/php_scan/site_scan_"$TIMESTAMP"
           ;;
        4) mkdir -p /root/support/exBOMBER/tmp # Create tmp directory for files created during execution
           echo SCAN_TYPE = FC > /root/support/exBOMBER/tmp/scan_config # scan_config will be used to transfer subshell-created variables into the parent shell
           SCAN_TYPE=FC
           # Create logging directory
           mkdir -p /var/log/exb_logs/findcrack0r
           CHECK_FOR_FINDCRACK0R 2>&1 | tee /var/log/exb_logs/findcrack0r/chk_fcr_"$TIMESTAMP"
           # sed command to remove messy terminal color variables from logs
           sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|(B\[m||g' -e 's|\[H\[2J||g' -e 's|\[1m\[31m||g' -e 's|\[1m\[32m||g' \
           -e 's|\[1m\[33m||g' -e 's|\[1m\[34m||g' -e 's|\[1m\[35m||g' -e 's|\[1m\[36m||g' -e 's|\[1m\[37m||g' \
           -e 's|\[4m||g' -e 's|\[5m||g' -e 's|\[5A\[K||g' -e 's|\[0m||g' -e 's|\[1A\[K||g' -e 's|\[2A\[K||g' /var/log/exb_logs/findcrack0r/chk_fcr_"$TIMESTAMP"
           EXEC_FINDCRACK0R 2>&1 | tee /var/log/exb_logs/findcrack0r/exec_fcr_"$TIMESTAMP"
           # sed command to remove messy terminal color variables from logs
           sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|(B\[m||g' -e 's|\[H\[2J||g' -e 's|\[1m\[31m||g' -e 's|\[1m\[32m||g' \
           -e 's|\[1m\[33m||g' -e 's|\[1m\[34m||g' -e 's|\[1m\[35m||g' -e 's|\[1m\[36m||g' -e 's|\[1m\[37m||g' \
           -e 's|\[4m||g' -e 's|\[5m||g' -e 's|\[5A\[K||g' -e 's|\[0m||g' -e 's|\[1A\[K||g' -e 's|\[2A\[K||g' /var/log/exb_logs/findcrack0r/exec_fcr_"$TIMESTAMP"
           ;;
      1-i) FINDBOT_HELPTEXT
           ;;
      2-i) MALDET_HELPTEXT
           ;;
      3-i) PHP_SITE_SCAN_HELPTEXT
           ;;
      4-i) FINDCRACK0R_HELPTEXT
           ;;
    [q,Q]) clear
           HEADER
           mkdir -p /root/support/exBOMBER/tmp
           touch  /root/support/exBOMBER/tmp/QUIT
           echo -e "    Exiting...\n\n\n"
           sleep 2
           exit 0
           ;;
        *) printf "\n" # Loop invalid entries
           echo -e "    ${RED}${BLINK}INVALID SELECTION${NOCOLOR}\n\n    Please choose again"
           sleep 2
           GET_INSTRUCTIONS
           ;;

    esac

}

FINDBOT_HELPTEXT () {

    clear
    HEADER
    echo -e "    ${WHITE}FINDBOT.PL HELPTEXT${NOCOLOR}"
    DIVIDER
    echo -e "    This script attempts to find malicious files/scripts on your machine. It"
    echo -e "    specifically looks for known documented spambots, as well as ${WHITE}\"suspicious\"${NOCOLOR}"
    echo -e "    constructs in various scripting languages.\n"
    echo -e "    By default, findbot.pl scans the directories ${WHITE}/tmp, /usr/tmp, /home,${NOCOLOR} and"
    echo -e "    ${WHITE}/var/www${NOCOLOR}.  This script isn't fast, so if you know where to look you can"
    echo -e "    speed things up by passing it only the directories that you suspect"
    echo -e "    contain malware.\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}ex${CYAN}BOMBER ${WHITE}FINDBOT.PL Options${NOCOLOR}:\n"
    echo -e "        ${WHITE}ES${NOCOLOR} - Scans the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver"
    echo -e "        ${WHITE}DD${NOCOLOR} - Scans the ${WHITE}D${NOCOLOR}efault ${WHITE}D${NOCOLOR}irectories:"
    echo -e "             ${WHITE}/tmp, /usr/tmp, /home, ${NOCOLOR}and ${WHITE}/var/www${NOCOLOR}"
    echo -e "        ${WHITE}CP${NOCOLOR} - Scans the user provided ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Results${NOCOLOR}:\n"
    echo -e "        There are two types of ${WHITE}\"detections\"${NOCOLOR}:\n"
    echo -e "            ${WHITE}\"suspicious files\"${NOCOLOR} are files that contain things that -may- be"
    echo -e "            malicious.\n"
    echo -e "            ${WHITE}\"malware\"${NOCOLOR} is definitely malicious software.\n"
    echo -e "        ${WHITE}ex${CYAN}BOMBER ${NOCOLOR}FINDBOT.PL scan logs will be written to:\n"
    echo -e "            ${WHITE}/var/log/exb_logs/findbot/${NOCOLOR}<log>\n"
    echo -e "        A pastebin of the log will also be provided.\n\n\n"
    echo -e -n "    [ ${CYAN}M${NOCOLOR} ] ${WHITE}Menu${NOCOLOR} | [ ${CYAN}Q${NOCOLOR} ] ${WHITE}Quit${NOCOLOR} : "
    read -r FHT_CHOICE
    case "$FHT_CHOICE" in

        [m,M]) GET_INSTRUCTIONS
               ;;
        [q,Q]) clear
               HEADER
               mkdir -p /root/support/exBOMBER/tmp
               touch  /root/support/exBOMBER/tmp/QUIT
               echo -e "    Exiting...\n\n\n"
               sleep 2
               exit 0
               ;;
            *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}" # Loop invalid entries
               sleep 2
               FINDBOT_HELPTEXT
               ;;

    esac

}

MALDET_HELPTEXT () {

    clear
    HEADER
    echo -e "    ${WHITE}MALDET HELPTEXT${NOCOLOR}"
    DIVIDER
    echo -e "    ${GREEN}Detailed Information here${NOCOLOR} ${YELLOW}===> ${WHITE}https://www.rfxn.com/appdocs/README.maldetect${NOCOLOR}\n"
    echo -e "    Linux Malware Detect (LMD) is a malware scanner for Linux released under the"
    echo -e "    GNU GPLv2 license, that is designed around the threats faced in shared hosted"
    echo -e "    environments. It uses threat data from network edge intrusion detection systems"
    echo -e "    to extract malware that is actively being used in attacks and generates"
    echo -e "    signatures for detection. In addition, threatdata is also derived from user"
    echo -e "    submissions with the LMD checkout feature and from malware community resources."
    echo -e "    The signatures that LMD uses are MD5 file hashes and HEX pattern matches, they"
    echo -e "    are also easily exported to any number of detection tools such as ClamAV.\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}ex${CYAN}BOMBER ${WHITE}MALDET Options${NOCOLOR}:\n"
    echo -e "        ${WHITE}ES${NOCOLOR} - Scans the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver"
    echo -e "        ${WHITE}UD${NOCOLOR} - Scans the ${WHITE}U${NOCOLOR}ser ${WHITE}D${NOCOLOR}irectories:"
    echo -e "             ${WHITE}/home/*${NOCOLOR}"
    echo -e "        ${WHITE}CP${NOCOLOR} - Scans the user provided ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Results${NOCOLOR}:\n"
    echo -e "        In addition to Maldet's default logs, ${WHITE}ex${CYAN}BOMBER${NOCOLOR} Maldet scan logs will be"
    echo -e "        written to:\n"
    echo -e "            ${WHITE}/var/log/exb_logs/maldet/${NOCOLOR}<log>\n"
    echo -e "        A pastebin of the log will also be provided.\n\n\n"
    echo -e -n "    [ ${CYAN}M${NOCOLOR} ] ${WHITE}Menu${NOCOLOR} | [ ${CYAN}Q${NOCOLOR} ] ${WHITE}Quit${NOCOLOR} : "
    read -r MHT_CHOICE
    case "$MHT_CHOICE" in

        [m,M]) GET_INSTRUCTIONS
               ;;
        [q,Q]) clear
               HEADER
               mkdir -p /root/support/exBOMBER/tmp
               touch  /root/support/exBOMBER/tmp/QUIT
               echo -e "    Exiting...\n\n\n"
               sleep 2
               exit 0
               ;;
            *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}" # Loop invalid entries
               sleep 2
               MALDET_HELPTEXT
               ;;
    esac

}

PHP_SITE_SCAN_HELPTEXT () {

    clear # NEED TO DEVELOP PHP_SITE_SCAN RE: http://www.gregfreeman.org/2013/how-to-tell-if-your-php-site-has-been-compromised/
    HEADER
    echo -e "    ${WHITE}PHP SITE SCAN HELPTEXT${NOCOLOR}"
    DIVIDER
    echo -e "    ${YELLOW}IN DEVELOPMENT\n\n\n${NOCOLOR}"
    echo -e -n "    [ ${CYAN}M${NOCOLOR} ] ${WHITE}Menu${NOCOLOR} | [ ${CYAN}Q${NOCOLOR} ] ${WHITE}Quit${NOCOLOR} : "
    read -r PHT_CHOICE
    case "$PHT_CHOICE" in

        [m,M]) GET_INSTRUCTIONS
               ;;
        [q,Q]) clear
               HEADER
               mkdir -p /root/support/exBOMBER/tmp
               touch  /root/support/exBOMBER/tmp/QUIT
               echo -e "    Exiting...\n\n\n"
               sleep 2
               exit 0
               ;;
            *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}" # Loop invalid entries
               sleep 2
               PHP_SITE_SCAN_HELPTEXT
               ;;
    esac

}

FINDCRACK0R_HELPTEXT () {

    clear
    HEADER
    echo -e "    ${WHITE}FINDCRACK0R HELPTEXT${NOCOLOR}"
    DIVIDER
    echo -e "    Findcrack0r.pl is a regex-based PHP malware scanner developed by"
    echo -e "    coydogsoftware.net\n"
    echo -e "    ${GREEN}===> ${WHITE}https://repo.coydogsoftware.net/coydog/rxtools/tree/master${NOCOLOR}\n"
    echo -e "    It requires ${WHITE}File::Path${NOCOLOR}, which should be a Perl core module. ${WHITE}ex${CYAN}BOMBER${NOCOLOR}'s"
    echo -e "    implementation sets the script to use cPanel's Perl environment for WHM"
    echo -e "    servers automatically. An option to set user defined flags when launching"
    echo -e "    the scan is also available.\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}ex${CYAN}BOMBER ${WHITE}FINDCRACK0R Options${NOCOLOR}:\n"
    echo -e "        ${WHITE}ES${NOCOLOR} - Scans the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver"
    echo -e "        ${WHITE}WD${NOCOLOR} - Scans the ${WHITE}W${NOCOLOR}eb ${WHITE}D${NOCOLOR}oc-roots:"
    echo -e "                     ${WHITE}/home/*/public_html${NOCOLOR} or ${WHITE}/var/www${NOCOLOR}"
    echo -e "        ${WHITE}CF${NOCOLOR} - Scan set with user defined ${WHITE}C${NOCOLOR}ustom ${WHITE}F${NOCOLOR}lags"
    echo -e "        ${WHITE}CP${NOCOLOR} - Scans the user provided ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Results${NOCOLOR}:\n"
    echo -e "        ${WHITE}ex${CYAN}BOMBER${NOCOLOR} FINDCRACK0R scan logs will be written to:\n"
    echo -e "            ${WHITE}/var/log/exb_logs/findcrack0r/${NOCOLOR}<log>\n"
    echo -e "        A pastebin of the log will also be provided.\n\n\n"
    echo -e -n "    [ ${CYAN}M${NOCOLOR} ] ${WHITE}Menu${NOCOLOR} | [ ${CYAN}Q${NOCOLOR} ] ${WHITE}Quit${NOCOLOR} : "
    read -r MHT_CHOICE
    case "$MHT_CHOICE" in

        [m,M]) GET_INSTRUCTIONS
               ;;
        [q,Q]) clear
               HEADER
               mkdir -p /root/support/exBOMBER/tmp
               touch  /root/support/exBOMBER/tmp/QUIT
               echo -e "    Exiting...\n\n\n"
               sleep 2
               exit 0
               ;;
            *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}" # Loop invalid entries
               sleep 2
               FINDCRACK0R_HELPTEXT
               ;;
    esac
}

CHECK_FOR_FINDBOT () {

    # Checks for findbot.pl in our location
    if [ -f "/root/support/exBOMBER/findbot.pl" ]; then

        clear
        HEADER
        echo -e "    ${GREEN}FINDBOT.PL ${WHITE}is ${NOCOLOR}present on server\n\n"
        sleep .5

    else

        clear
        HEADER
        echo -e "    ${GREEN}FINDBOT.PL ${NOCOLOR}is ${WHITE}not${NOCOLOR} present on server\n\n"
        sleep .5
        echo -e "    Fetching FINDBOT.PL...\n"
        # Create exBOMBER directory if not present
        mkdir -p /root/support/exBOMBER
        # fetch findbot.pl and set it executable
        wget -q http://cbl.abuseat.org/findbot.pl -P /root/support/exBOMBER && chmod +x /root/support/exBOMBER/findbot.pl
        sleep .5
        echo -e "    Script retrieved successfully\n"
        sleep .5

    fi

}

CHECK_FOR_MALDET () {

    # Checks for maldet on server
    if [ -f "/usr/local/maldetect/maldet" ]; then

        clear
        HEADER
        echo -e "    ${GREEN}MALDET ${WHITE}is ${NOCOLOR}present on server\n\n"
        sleep .5
        # Update maldet if found
        echo -e "    Updating malware signatures, stand by...\n"
        maldet -u > /dev/null 2>&1 && maldet -d > /dev/null 2>&1
        echo -e "    MALDET has been updated"
        sleep .5

    else

        clear
        HEADER
        echo -e "    ${GREEN}MALDET ${NOCOLOR}is ${WHITE}not${NOCOLOR} present on server\n\n"
        sleep .5
        # fetch and install maldet to default location
        echo -e "    Fetching MALDET...\n"
        mkdir -p /root/support/exBOMBER
        wget -q http://www.rfxn.com/downloads/maldetect-current.tar.gz -P /root/support/exBOMBER/
        cd /root/support/exBOMBER && tar xf /root/support/exBOMBER/maldetect-current.tar.gz
        echo -e "    Installing MALDET, stand by...\n"
        cd /root/support/exBOMBER/maldetect-* && /bin/bash install.sh > /dev/null 2>&1 &&
        rm -rf /root/support/exBOMBER/maldetect-current.tar.gz
        echo -e "    MALDET installed successfully\n"
        sleep .5

    fi

}

CHECK_FOR_FINDCRACK0R () {

    # Checks for findcrack0r.pl in our location
    if [ -f "/root/support/exBOMBER/findcrack0r.pl" ]; then

        clear
        HEADER
        echo -e "    ${GREEN}FINDCRACK0R.PL ${WHITE}is ${NOCOLOR}present on server\n\n"
        sleep .5

    else

        clear
        HEADER
        echo -e "    ${GREEN}FINDCRACK0R.PL ${NOCOLOR}is ${WHITE}not${NOCOLOR} present on server\n\n"
        sleep .5
        echo -e "    Fetching FINDCRACK0R.PL...\n"
        # Create exBOMBER directory if not present
        mkdir -p /root/support/exBOMBER
        # fetch findcrack0r.pl and set it executable
        wget -q https://raw.githubusercontent.com/InterGenStudios/exBOMBER/master/findcrack0r.pl -P /root/support/exBOMBER \
        && chmod +x /root/support/exBOMBER/findcrack0r.pl
        sleep .5
        echo -e "    Script retrieved successfully\n"
        sleep .5

    fi

}

EXEC_FINDBOT () {

    # User configuration menu for findbot.pl scan
    clear
    HEADER
    echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}FINDBOT.PL MENU${NOCOLOR}"
    DIVIDER
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Set the search path${NOCOLOR}\n\n"
    echo -e "        ${WHITE}1) ES - ${NOCOLOR}Scan the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver\n"
    echo -e "        ${WHITE}2) DD - ${NOCOLOR}Scan the ${WHITE}D${NOCOLOR}efault ${WHITE}D${NOCOLOR}irectories:\n"
    # Set default search directories based on presence of any server panels
    if [ "$PANEL" = "WHM" ] || [ "$PANEL" = "DirectAdmin" ]; then

        F_PATH_TYPE=TRI
        echo -e "                       ${WHITE}/tmp /usr/tmp /home${NOCOLOR}\n"

    else

        F_PATH_TYPE=QUAD
        echo -e "                       ${WHITE}/tmp /usr/tmp /home /var/www${NOCOLOR}\n"

    fi
    echo -e "        ${WHITE}3) CP - ${NOCOLOR}Scan a ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath\n\n"
    echo -e -n "    [${WHITE}Enter Selection ${NOCOLOR}1-3]: "
    read -r E_F_SELECTION
    case $E_F_SELECTION in

        1) tput cuu 2 && tput el
           echo SEARCH_PATHS = / >> /root/support/exBOMBER/tmp/scan_config
           SEARCH_PATHS="/"
           echo -e "\n    FINDBOT.PL will search the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver\n"
           echo -e "    ${YELLOW}-NOTE-${NOCOLOR} This search will take quite some time to complete\n\n"
           echo -e -n "    Enable Experimental ${WHITE}\"-c\"${NOCOLOR} (turbo) Option for FINDBOT.PL (${WHITE}y${NOCOLOR}/${WHITE}N${NOCOLOR})? "
           read -r F_TURBO_OPTION
           # Allow option to use -c flag in findbot.pl scan
           case $F_TURBO_OPTION in

               [y,Y]) echo TURBO_OPTION = ON >> /root/support/exBOMBER/tmp/scan_config
                      TURBO_OPTION=ON
                      echo -e "\n    ${GREEN}TURBO OPTION ENABLED${NOCOLOR}\n\n"
                      sleep 2
                      ;;
                  -c) echo TURBO_OPTION = ON >> /root/support/exBOMBER/tmp/scan_config
                      TURBO_OPTION=ON
                      echo -e "\n    ${GREEN}TURBO OPTION ENABLED${NOCOLOR}\n\n"
                      sleep 2
                      ;;
                   *) echo TURBO_OPTION = OFF >> /root/support/exBOMBER/tmp/scan_config
                      TURBO_OPTION=OFF
                      echo -e "\n    ${BLUE}TURBO OPTION DISABLED${NOCOLOR}\n\n"
                      sleep 2
                      ;;

           esac
           GET_NOTIFY_DESTINATION
           ;;
        2) tput cuu 2 && tput el
           if [ "$F_PATH_TYPE" = "TRI" ]; then

               echo SEARCH_PATHS = /tmp /usr/tmp /home >> /root/support/exBOMBER/tmp/scan_config
               SEARCH_PATHS="/tmp /usr/tmp /home"

           else

               echo SEARCH_PATHS = /tmp /usr/tmp /home /var/www >> /root/support/exBOMBER/tmp/scan_config
               SEARCH_PATHS="/tmp /usr/tmp /home /var/www"

           fi
           echo -e "\n    FINDBOT.PL will search ${WHITE}$SEARCH_PATHS${NOCOLOR}\n"
           echo -e "    ${YELLOW}-NOTE-${NOCOLOR} This search will take quite some time to complete\n\n\n"
           # Allow option to use -c flag in findbot.pl scan
           case $F_TURBO_OPTION in

               [y,Y]) echo TURBO_OPTION = ON >> /root/support/exBOMBER/tmp/scan_config
                      TURBO_OPTION=ON
                      echo -e "\n    ${GREEN}TURBO OPTION ENABLED${NOCOLOR}\n\n"
                      sleep 2
                      ;;
                  -c) echo TURBO_OPTION = ON >> /root/support/exBOMBER/tmp/scan_config
                      TURBO_OPTION=ON
                      echo -e "\n    ${GREEN}TURBO OPTION ENABLED${NOCOLOR}\n\n"
                      sleep 2
                      ;;
                   *) echo TURBO_OPTION = OFF >> /root/support/exBOMBER/tmp/scan_config
                      TURBO_OPTION=OFF
                      echo -e "\n    ${BLUE}TURBO OPTION DISABLED${NOCOLOR}\n\n"
                      sleep 2
                      ;;

           esac
           GET_NOTIFY_DESTINATION
           ;;
        3) tput cuu 2 && tput el
           echo -e "\n    ${GREEN}-- ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath selected ${GREEN}--${NOCOLOR}   \n"
           echo -e -n "    [${WHITE}Enter Custom Path${NOCOLOR}]: "
           read -r CUSTOM_PATH
           # Check to make sure user-entered custom path exists
           if [ -d "$CUSTOM_PATH" ]; then

               tput cuu 2 && tput el
               echo -e "\n    FINDBOT.PL will search ${WHITE}$CUSTOM_PATH${NOCOLOR}\n\n"
               echo SEARCH_PATHS = "$CUSTOM_PATH" >> /root/support/exBOMBER/tmp/scan_config
               echo -e -n "    Enable Experimental ${WHITE}\"-c\"${NOCOLOR} (turbo) Option for FINDBOT.PL (${WHITE}y${NOCOLOR}/${WHITE}N${NOCOLOR})? "
               read -r F_TURBO_OPTION
               # Allow option to use -c flag in findbot.pl scan
               case $F_TURBO_OPTION in

                   [y,Y]) echo TURBO_OPTION = ON >> /root/support/exBOMBER/tmp/scan_config
                          TURBO_OPTION=ON
                          echo -e "\n    ${GREEN}TURBO OPTION ENABLED${NOCOLOR}\n\n"
                          sleep 2
                          ;;
                      -c) echo TURBO_OPTION = ON >> /root/support/exBOMBER/tmp/scan_config
                          TURBO_OPTION=ON
                          echo -e "\n    ${GREEN}TURBO OPTION ENABLED${NOCOLOR}\n\n"
                          sleep 2
                          ;;
                       *) echo TURBO_OPTION = OFF >> /root/support/exBOMBER/tmp/scan_config
                          TURBO_OPTION=OFF
                          echo -e "\n    ${BLUE}TURBO OPTION DISABLED${NOCOLOR}\n\n"
                          sleep 2
                          ;;

               esac
               GET_NOTIFY_DESTINATION

           else

               echo -e "\n    ${RED}${BLINK}INVALID PATH${NOCOLOR}\n\n\n\n"
               sleep 2
               # Loop for invalid entries
               EXEC_FINDBOT

           fi
           ;;
        *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}\n\n\n\n"
           sleep 2
           # Loop for invalid entries
           EXEC_FINDBOT
           ;;
    esac

}

EXEC_MALDET () {

    # User configuration menu for maldet scan
    clear
    HEADER
    echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}MALDET MENU${NOCOLOR}"
    DIVIDER
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Set the search path${NOCOLOR}\n\n"
    echo -e "        ${WHITE}1) ES - ${NOCOLOR}Scan the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver\n"
    echo -e "        ${WHITE}2) UD - ${NOCOLOR}Scan the ${WHITE}U${NOCOLOR}ser ${WHITE}D${NOCOLOR}irectories:\n"
    if [ "$PANEL" = "WHM" ] || [ "$PANEL" = "DirectAdmin" ]; then

        M_PATH_TYPE=TRI
        echo -e "                       ${WHITE}/home${NOCOLOR}\n"

    else

        M_PATH_TYPE=QUAD
        echo -e "                       ${WHITE}/home /var/www${NOCOLOR}\n"

    fi
    echo -e "        ${WHITE}3) CP - ${NOCOLOR}Scan a ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath\n\n"
    echo -e -n "    [${WHITE}Enter Selection ${NOCOLOR}1-3]: "
    read -r E_M_SELECTION
    case $E_M_SELECTION in

        1) tput cuu 2 && tput el
           echo SEARCH_PATHS = / >> /root/support/exBOMBER/tmp/scan_config
           SEARCH_PATHS="/"
           echo -e "\n    MALDET will search the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver\n"
           echo -e "    ${YELLOW}-NOTE-${NOCOLOR} This search will take quite some time to complete\n\n\n"
           sleep 2
           GET_NOTIFY_DESTINATION
           ;;
        2) tput cuu 2 && tput el
           if [ "$M_PATH_TYPE" = "TRI" ]; then

               SHOW_SEARCH_PATHS="/home/*/public_html"
               SEARCH_PATHS="/home/?/public_html"
               echo SEARCH_PATHS = /home/?/public_html >> /root/support/exBOMBER/tmp/scan_config

           else

               SHOW_SEARCH_PATHS="/var/www"
               SEARCH_PATHS="/var/www"
               echo SEARCH_PATHS = /var/www >> /root/support/exBOMBER/tmp/scan_config

           fi
           echo -e "\n    MALDET will search ${WHITE}$SHOW_SEARCH_PATHS${NOCOLOR}\n"
           echo -e "    ${YELLOW}-NOTE-${NOCOLOR} This search will take quite some time to complete\n\n\n"
           sleep 2
           GET_NOTIFY_DESTINATION
           ;;
        3) tput cuu 2 && tput el
           echo -e "\n    ${GREEN}-- ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath selected ${GREEN}--${NOCOLOR}   \n"
           echo -e -n "    [${WHITE}Enter Custom Path${NOCOLOR}]: "
           read -r CUSTOM_PATH
           # Check to make sure user-entered custom path exists
           if [ -d "$CUSTOM_PATH" ]; then

               tput cuu 2 && tput el
               echo SEARCH_PATHS = "$CUSTOM_PATH" >> /root/support/exBOMBER/tmp/scan_config
               echo -e "\n    MALDET will now scan the ${WHITE}$CUSTOM_PATH${NOCOLOR} directory.\n\n\n\n"
               sleep 2
               GET_NOTIFY_DESTINATION

           else

               echo -e "\n    ${RED}${BLINK}INVALID PATH${NOCOLOR}\n\n\n\n"
               sleep 2
               # Loop for invalid entries
               EXEC_MALDET

           fi
           ;;
        *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}\n\n\n\n"
           sleep 2
           # Loop for invalid entries
           EXEC_MALDET
           ;;
    esac

}

EXEC_PHP_SITE_SCAN () {

    clear # NEED TO DEVELOP PHP_SITE_SCAN RE: http://www.gregfreeman.org/2013/how-to-tell-if-your-php-site-has-been-compromised/
    HEADER
    echo -e "    ${YELLOW}${UNDERLINE_TEXT}IN DEVELOPMENT - CHECK BACK SOON${NOCOLOR}\n\n\n\n"

}

EXEC_FINDCRACK0R () {

    # User configuration menu for findcrack0r.pl scan
    clear
    HEADER
    echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}FINDCRACK0R.PL MENU${NOCOLOR}"
    DIVIDER
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Set the search options${NOCOLOR}\n\n"
    echo -e "        ${WHITE}1) ES - ${NOCOLOR}Scan the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver\n"
    echo -e "        ${WHITE}2) WD - ${NOCOLOR}Scan the ${WHITE}W${NOCOLOR}eb ${WHITE}D${NOCOLOR}oc-roots:\n"
    # Set default search directories based on presence of any server panels
    if [ "$PANEL" = "WHM" ] || [ "$PANEL" = "DirectAdmin" ]; then

        FC_PATH_TYPE=SINGLE_W_D
        echo -e "                       ${WHITE}/home/*/public_html${NOCOLOR}\n"

    elif [ "$PANEL" = "Plesk" ]; then

        FC_PATH_TYPE=SINGLE_P
        echo -e "                       ${WHITE}/var/www/vhosts${NOCOLOR}\n"

    else

        FC_PATH_TYPE=SINGLE_U
        echo -e "                       ${WHITE}/var/www${NOCOLOR}\n"

    fi
    echo -e "        ${WHITE}3) CP - ${NOCOLOR}Scan a ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath\n\n"
    echo -e "        ${WHITE}4) CF - ${NOCOLOR}Set ${WHITE}C${NOCOLOR}ustom ${WHITE}F${NOCOLOR}lags\n\n"
    echo -e -n "    [${WHITE}Enter Selection ${NOCOLOR}1-4]: "
    read -r F_C_SELECTION
    case $F_C_SELECTION in

        1) tput cuu 2 && tput el
           echo SEARCH_PATHS = / >> /root/support/exBOMBER/tmp/scan_config
           SEARCH_PATHS="/"
           echo -e "\n    FINDCRACK0R will search the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver\n"
           echo -e "    ${YELLOW}-NOTE-${NOCOLOR} This search will take quite some time to complete\n\n\n"
           sleep 2
           GET_NOTIFY_DESTINATION
           ;;
        2) tput cuu 2 && tput el
           if [ "$FC_PATH_TYPE" = "SINGLE_W_D" ]; then

               SEARCH_PATHS="/home/*/public_html"
               echo SEARCH_PATHS = /home/*/public_html >> /root/support/exBOMBER/tmp/scan_config

           elif [ "$FC_PATH_TYPE" = "SINGLE_P" ]; then

               SEARCH_PATHS="/var/www/vhosts"
               echo SEARCH_PATHS = /var/www/vhosts >> /root/support/exBOMBER/tmp/scan_config

           else

               SEARCH_PATHS="/var/www"
               echo SEARCH_PATHS = /var/www >> /root/support/exBOMBER/tmp/scan_config

           fi
           echo -e "\n    MALDET will search ${WHITE}$SHOW_SEARCH_PATHS${NOCOLOR}\n"
           echo -e "    ${YELLOW}-NOTE-${NOCOLOR} This search will take quite some time to complete\n\n\n"
           sleep 2
           GET_NOTIFY_DESTINATION
           ;;
        3) tput cuu 2 && tput el
           echo -e "\n    ${GREEN}-- ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath selected ${GREEN}--${NOCOLOR}   \n"
           echo -e -n "    [${WHITE}Enter Custom Path${NOCOLOR}]: "
           read -r CUSTOM_PATH
           # Check to make sure user declared custom path exists
           if [ -d "$CUSTOM_PATH" ]; then

               tput cuu 2 && tput el
               echo SEARCH_PATHS = "$CUSTOM_PATH" >> /root/support/exBOMBER/tmp/scan_config
               echo -e "\n    FINDCRACK0R will now scan the ${WHITE}$CUSTOM_PATH${NOCOLOR} directory.\n\n\n\n"
               sleep 2
               GET_NOTIFY_DESTINATION

           else

               echo -e "\n    ${RED}${BLINK}INVALID PATH${NOCOLOR}\n\n\n\n"
               sleep 2
               # Loop invalid entries
               EXEC_FINDCRACK0R

           fi
           ;;
        4) clear
           HEADER
           echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}FINDCRACK0R.PL Custom Flag options${NOCOLOR}"
           DIVIDER
           echo -e "    ${WHITE}${UNDERLINE_TEXT}Available flags${NOCOLOR}:\n"
           echo -e "    ${WHITE}-b${NOCOLOR}    Number of bytes per file to scan.  Default is 5000000"
           echo -e "    ${WHITE}-p${NOCOLOR}    Restrict searches to *.php (faster, but may miss things)"
           echo -e "    ${WHITE}-s${NOCOLOR}    Skip symlinks"
           echo -e "    ${WHITE}-d${NOCOLOR}    Use grep to check for defacements\n"
           echo -e "    ${WHITE}Example Entry:  ${NOCOLOR}-b 1000000 -s -d"

           DIVIDER
           echo -e -n "    [${WHITE}Enter Custom Flags ${NOCOLOR}]: "
           read -r FC_CUSTOM_FLAGS
           tput cuu 1 && tput el
           echo -e "    The following Custom Flags will be used for the FINDCRACK0R scan:\n"
           echo -e "                ${WHITE}$FC_CUSTOM_FLAGS${NOCOLOR}\n"
           echo -e -n "    Are these correct (${WHITE}y${NOCOLOR}/${WHITE}N${NOCOLOR})${WHITE}?${NOCOLOR} "
           read -r FC_CUSTOM_FLAGS_CONFIRMATION
           case $FC_CUSTOM_FLAGS_CONFIRMATION in

               [y,Y]) tput cuu 1 && tput el
                      echo FC_CUSTOM_FLAGS = "$FC_CUSTOM_FLAGS" >> /root/support/exBOMBER/tmp/scan_config
                      echo -e "    ${WHITE}Custom Flags confirmed${NOCOLOR}"
                      sleep 2
                      ;;
                   *) tput cuu 1 && tput el
                      echo -e "    ${YELLOW}Custom Flags invalidated by user${NOCOLOR}"
                      echo -e "    Restarting FINDCRACK0R configuration menu..."
                      sleep 2
                      # Loop for invalid entries
                      EXEC_FINDCRACK0R
                      ;;

           esac
           echo -e -n "\n    [${WHITE}Enter Custom Path${NOCOLOR}]: "
           read -r CUSTOM_PATH
           # Check to make sure user declared custom path exists
           if [ -d "$CUSTOM_PATH" ]; then

               tput cuu 2 && tput el
               echo SEARCH_PATHS = "$CUSTOM_PATH" >> /root/support/exBOMBER/tmp/scan_config
               echo -e "\n    FINDCRACK0R will now scan the ${WHITE}$CUSTOM_PATH${NOCOLOR} directory.\n\n\n\n"
               sleep 2
               GET_NOTIFY_DESTINATION

           else

               echo -e "\n    ${RED}${BLINK}INVALID PATH${NOCOLOR}\n\n\n\n"
               sleep 2
               # Loop invalid entries
               EXEC_FINDCRACK0R

           fi
           ;;
        *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}\n\n\n\n"
           sleep 2
           # Loop for invalid entries
           EXEC_FINDCRACK0R
           ;;

       esac

}

GET_NOTIFY_DESTINATION () {

    clear
    HEADER
    # NEED TO IMPLEMENT BASIC PROPERLY FORMATTED EMAIL ADDRESS REGEX
    if [ "$SCAN_TYPE" = "FB" ]; then # Adjust header display based on scan-type

        echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}FINDBOT.PL Scan${NOCOLOR}"

    elif [ "$SCAN_TYPE" = "MD" ]; then

        echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}MALDET Scan${NOCOLOR}"

    elif [ "$SCAN_TYPE" = "PS" ]; then

        echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}PHP Site Scan${NOCOLOR}"

    else

        echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}FINDCRACK0R.PL Scan${NOCOLOR}"

    fi
    DIVIDER
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Set Completed Scan Email Notification Address${NOCOLOR}\n\n"
    echo -e -n "    Enter notification email address: ${GREEN}"
    read -r EMAIL_ADDR
    tput cuu 1 && tput el
    echo -e -n "    ${NOCOLOR}Send notifications to ${GREEN}$EMAIL_ADDR${NOCOLOR}, is that correct (${WHITE}y${NOCOLOR}/${WHITE}N${NOCOLOR})${WHITE}? ${NOCOLOR}"
    read -r EMAIL_ADDR_VERIFY
    case $EMAIL_ADDR_VERIFY in

        [y,Y]) tput cuu 1 && tput el
               echo -e "\n    Set Notification Email Address to ${GREEN}$EMAIL_ADDR${NOCOLOR}\n\n"
               echo EMAIL_ADDR = "$EMAIL_ADDR" >> /root/support/exBOMBER/tmp/scan_config
               ;;
            *) tput cuu 1 && tput el
               echo -e "\n    ${RED}RE-ENTER NOTIFICATION EMAIL${NOCOLOR}\n\n"
               sleep 2
               GET_NOTIFY_DESTINATION # Loop if user notices they entered an incorrect email
               ;;

    esac
    # Get Support Ticket Information if needed
    echo -e -n "    Is this scan needed for a ${WHITE}Support Request${NOCOLOR} (${WHITE}y${NOCOLOR}/${WHITE}N${NOCOLOR})${WHITE}?${NOCOLOR} "
    read SUPPORT_CHOICE
    case $SUPPORT_CHOICE in

        [y,Y]) tput cuu 1 && tput el
               echo -e -n "    Enter ${WHITE}SUPPORT TICKET NUMBER${NOCOLOR}: "
               read SUPPORT_TICKET_ID
               echo SUPPORT_TICKET_ID = "$SUPPORT_TICKET_ID" >> /root/support/exBOMBER/tmp/scan_config
               tput cuu 1 && tput el
               echo -e "    Support Ticket ${WHITE}#$SUPPORT_TICKET_ID${NOCOLOR} will be added to the notification email ${WHITE}SUBJECT${NOCOLOR}\n\n"
               sleep 2
               ;;
            *) tput cuu 1 && tput el
               echo -e "    Support Request association ${WHITE}skipped${NOCOLOR}\n\n"
               sleep 2
               ;;

    esac

}

DETACH () {

    # Magic code allows scan subshells to be ran 'detached' in background
    # without sending anything back to our terminal
    if test -t 1; then

        exec 1>/dev/null

    fi
    if test -t 2; then

        exec 2>/dev/null

    fi
    "$@" &

}

# findbot.pl scan with -c option
F_TURBO_SEARCH () {

    # The actual Search command
    /root/support/exBOMBER/./findbot.pl -c $SEARCH_PATHS >> /var/log/exb_logs/findbot/turbo_scan_"$TIMESTAMP" &&
    # Put something into a 'no results' log file
    if [ "$(wc -l /var/log/exb_logs/findbot/turbo_scan_$TIMESTAMP | awk '{print $1}')" = "0" ]; then

        {
        echo -e "\n    =========================================="
        echo -e "    FINDBOT.PL scan ran on $TIMESTAMP"
        echo -e "    ==========================================\n\n"
        echo -e "    NO HITS! SYSTEM IS CLEAN!\n\n"
        echo -e "    Regards,\n\n      -exBOMBER\n\n"
        } >> /var/log/exb_logs/findbot/turbo_scan_"$TIMESTAMP"

    fi
    # Create a pastebin of the results
    curl -s -d private=1 -d title=FINDBOT_SCAN -d name=exBOMBER --data-urlencode \
    text@/var/log/exb_logs/findbot/turbo_scan_"$TIMESTAMP" http://nobits.ml/api/create \
    > /root/support/exBOMBER/tmp/findbot_pastefile
    # Set the pastebin URL to it's 'raw' view
    sed -i 's|view/|view/raw/|' /root/support/exBOMBER/tmp/findbot_pastefile
    # Set the email subject based on any user entered Support Ticket ID info
    if [ -z "$SUPPORT_ID" ]; then

        SUBJECT=FINDBOT\ SCAN\ "$TIMESTAMP"

    else

        SUBJECT=FINDBOT\ SCAN\ "$TIMESTAMP"\ For\ Support\ Ticket\ "$SUPPORT_ID"

    fi
    # Email template
    {
    echo -e "TO: $EMAIL_ADDR\n"
    echo -e "FROM: exBOMBER\n"
    echo -e "SUBJECT: FINDBOT_SCAN_$TIMESTAMP\n\n"
    echo -e "Results are at: $(cat /root/support/exBOMBER/tmp/findbot_pastefile)\n"
    } >> /root/support/exBOMBER/tmp/f_scan_email # Basic email template file
    # Email the results
    mail -s "$SUBJECT" "$EMAIL_ADDR" < /root/support/exBOMBER/tmp/f_scan_email 2>&1 >/dev/null
    # Remove tmp file created during execution
    rm /root/support/exBOMBER/tmp/f_scan_email
    # Move pastefile into log directory
    mv /root/support/exBOMBER/tmp/findbot_pastefile /var/log/exb_logs/findbot/findbot_pastefile_"$TIMESTAMP"
    # Exit cleanly in background
    exit 0

}

# standard findbot.pl scan
F_SEARCH () {

    # The actual Search command
    /root/support/exBOMBER/./findbot.pl $SEARCH_PATHS >> /var/log/exb_logs/findbot/standard_scan_"$TIMESTAMP" &&
    # Put something into a 'no results' log file
    if [ "$(wc -l /var/log/exb_logs/findbot/standard_scan_$TIMESTAMP | awk '{print $1}')" = "0" ]; then

        {
        echo -e "\n    =========================================="
        echo -e "    FINDBOT.PL scan ran on $TIMESTAMP"
        echo -e "    ==========================================\n\n"
        echo -e "    NO HITS! SYSTEM IS CLEAN!\n\n"
        echo -e "    Regards,\n\n      -exBOMBER\n\n"
        } > /var/log/exb_logs/findbot/standard_scan_"$TIMESTAMP"

    fi
    # Create a pastebin of the results
    curl -s -d private=1 -d title=FINDBOT_SCAN -d name=exBOMBER --data-urlencode \
    text@/var/log/exb_logs/findbot/standard_scan_"$TIMESTAMP" http://nobits.ml/api/create \
    > /root/support/exBOMBER/tmp/findbot_pastefile
    # Set the pastebin URL to it's 'raw' view
    sed -i 's|view/|view/raw/|' /root/support/exBOMBER/tmp/findbot_pastefile
    # Set the email subject based on any user entered Support Ticket ID info
    if [ -z "$SUPPORT_ID" ]; then

        SUBJECT=FINDBOT\ SCAN\ "$TIMESTAMP"

    else

        SUBJECT=FINDBOT\ SCAN\ "$TIMESTAMP"\ For\ Support\ Ticket\ "$SUPPORT_ID"

    fi
    # Email template
    {
    echo -e "TO: $EMAIL_ADDR\n"
    echo -e "FROM: exBOMBER\n"
    echo -e "SUBJECT: FINDBOT_SCAN_$TIMESTAMP\n\n"
    echo -e "Results are at: $(cat /root/support/exBOMBER/tmp/findbot_pastefile)\n"
    } >> /root/support/exBOMBER/tmp/f_scan_email # Basic email template file
    # Email the results
    mail -s "$SUBJECT" "$EMAIL_ADDR" < /root/support/exBOMBER/tmp/f_scan_email 2>&1 >/dev/null
    # Remove tmp file created during execution
    rm /root/support/exBOMBER/tmp/f_scan_email
    # Move pastefile into log directory
    mv /root/support/exBOMBER/tmp/findbot_pastefile /var/log/exb_logs/findbot/findbot_pastefile_"$TIMESTAMP"
    # Exit cleanly in background
    exit 0

}

# maldet scan
M_SEARCH () {

    # The actual Search command
    maldet -a $SEARCH_PATHS >> /var/log/exb_logs/maldet/standard_scan_"$TIMESTAMP" &&
    # Correct the formatting of the maldet log file
    sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|\[1G|\\e\n|g' -e 's|\\e||g' /var/log/exb_logs/maldet/standard_scan_"$TIMESTAMP" &&
    # Create a pastebin of the results
    curl -s -d private=1 -d title=MALDET_SCAN -d name=exBOMBER --data-urlencode \
    text@/var/log/exb_logs/maldet/standard_scan_"$TIMESTAMP" http://nobits.ml/api/create \
    > /root/support/exBOMBER/tmp/maldet_pastefile
    # Set the pastebin URL to it's 'raw' view
    sed -i 's|view/|view/raw/|' /root/support/exBOMBER/tmp/maldet_pastefile
    # Set the email subject based on any user entered Support Ticket ID info
    if [ -z "$SUPPORT_ID" ]; then

        SUBJECT=MALDET\ SCAN\ "$TIMESTAMP"

    else

        SUBJECT=MALDET\ SCAN\ "$TIMESTAMP"\ For\ Support\ Ticket\ "$SUPPORT_ID"

    fi
    # Email template
    {
    echo -e "TO: $EMAIL_ADDR\n"
    echo -e "FROM: exBOMBER\n"
    echo -e "SUBJECT: MALDET_SCAN_$TIMESTAMP\n\n"
    echo -e "Results are at: $(cat /root/support/exBOMBER/tmp/maldet_pastefile)\n"
    } >> /root/support/exBOMBER/tmp/m_scan_email # Basic email template file
    # Email the results
    mail -s "$SUBJECT" "$EMAIL_ADDR" < /root/support/exBOMBER/tmp/m_scan_email 2>&1 >/dev/null
    # Remove tmp files created during execution
    rm /root/support/exBOMBER/tmp/m_scan_email
    # Move pastefile into log directory
    mv /root/support/exBOMBER/tmp/maldet_pastefile /var/log/exb_logs/maldet/maldet_pastefile_"$TIMESTAMP"
    # Exit cleanly in background
    exit 0

}

# findcrack0r.pl scan
FC_SEARCH () {

    # Check for custom flags
    if [ -z "$FC_CUSTOM_FLAGS" ]; then

        # The actual Search command
        /root/support/exBOMBER/./findcrack0r.pl -o $SEARCH_PATHS >> \
        /var/log/exb_logs/findcrack0r/standard_scan_"$TIMESTAMP"

    else

        # The actual Search command
        /root/support/exBOMBER/./findcrack0r.pl "$FC_CUSTOM_FLAGS" -o $SEARCH_PATHS >> \
        /var/log/exb_logs/findcrack0r/standard_scan_"$TIMESTAMP"

    fi
    sleep 5
    # Put something into a 'no results' log file
    if [ "$(wc -l /var/log/exb_logs/findcrack0r/standard_scan_$TIMESTAMP | awk '{print $1}')" = "2" ]; then

        >/var/log/exb_logs/findcrack0r/standard_scan_"$TIMESTAMP"
        {
        echo -e "\n    =============================================="
        echo -e "    FINDCRACK0R.PL scan ran on $TIMESTAMP"
        echo -e "    ==============================================\n\n"
        echo -e "    NO HITS! SYSTEM IS CLEAN!\n\n"
        echo -e "    Regards,\n\n      -exBOMBER\n\n"
        } >> /var/log/exb_logs/findcrack0r/standard_scan_"$TIMESTAMP"

    fi
    # Create a pastebin of the results
    curl -s -d private=1 -d title=FINDCRACK0R.PL_SCAN -d name=exBOMBER --data-urlencode \
    text@/var/log/exb_logs/findcrack0r/standard_scan_"$TIMESTAMP" http://nobits.ml/api/create \
    > /root/support/exBOMBER/tmp/findcrack0r_pastefile
    # Set the pastebin URL to it's 'raw' view
    sed -i 's|view/|view/raw/|' /root/support/exBOMBER/tmp/findcrack0r_pastefile
    # Set the email subject based on any user entered Support Ticket ID info
    if [ -z "$SUPPORT_ID" ]; then

        SUBJECT=FINDCRACK0R.PL\ SCAN\ "$TIMESTAMP"

    else

        SUBJECT=FINDCRACK0R.PL\ SCAN\ "$TIMESTAMP"\ For\ Support\ Ticket\ "$SUPPORT_ID"

    fi
    # Email template
    {
    echo -e "TO: $EMAIL_ADDR\n"
    echo -e "FROM: exBOMBER\n"
    echo -e "SUBJECT: FINDCRACK0R.PL\ SCAN\ $TIMESTAMP\n\n"
    echo -e "Results are at: $(cat /root/support/exBOMBER/tmp/findcrack0r_pastefile)\n"
    } >> /root/support/exBOMBER/tmp/fc_scan_email # Basic email template file
    # Email the results
    mail -s "$SUBJECT" "$EMAIL_ADDR" < /root/support/exBOMBER/tmp/fc_scan_email 2>&1 >/dev/null
    # Remove temporary files created during execution
    rm /root/support/exBOMBER/tmp/fc_scan_email
    if [ $(find /root/support/exBOMBER -type f -name 'scan-*.txt' | wc -l) -gt 0 ]; then

        find /root/support/exBOMBER -type f -name 'scan-*.txt' | xargs rm

    fi
    if [ $(find /root/support/exBOMBER -type f -name 'symlinks-*.txt' | wc -l) -gt 0 ]; then

        find /root/support/exBOMBER -type f -name 'symlinks-*.txt' | xargs rm

    fi
    # Move pastefile into log directory
    mv /root/support/exBOMBER/tmp/findcrack0r_pastefile \
    /var/log/exb_logs/findcrack0r/findcrack0r_pastefile_"$TIMESTAMP"
    # Exit cleanly in background
    exit 0

}

############################
##------------------------##
## END - SCRIPT FUNCTIONS ##
##------------------------##
############################

#############################################
##-----------------------------------------##
## BEGIN - MAKE SURE WE'RE RUNNING AS ROOT ##
##-----------------------------------------##
#############################################

if [ "$(id -u)" != "0" ]; then

    echo -e "\n\n    ${RED}${BLINK}--------${NOCOLOR}"
    echo -e "    ${RED}${BLINK}WARNING!${NOCOLOR}"
    echo -e "    ${RED}${BLINK}--------${NOCOLOR}\n\n"
    echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}must be run as ${RED}${UNDERLINE_TEXT}root${NOCOLOR}\n\n"
    echo -e "    (Exiting now...)\n\n"
    exit 1

fi

###########################################
##---------------------------------------##
## END - MAKE SURE WE'RE RUNNING AS ROOT ##
##---------------------------------------##
###########################################

#########################
##---------------------##
## BEGIN - CORE SCRIPT ##
##---------------------##
#########################

# ID any major panels running on system
if [ -d /usr/local/cpanel ]; then

    PANEL="WHM"

elif [ -d /usr/local/psa ]; then

    PANEL="Plesk"

elif [ -d /usr/local/directadmin ]; then

    PANEL="DirectAdmin"

else

    PANEL="Unknown"

fi
# Create log file location
mkdir -p /var/log/exb_logs/exBOMBER
# Run Initial Menu function
GET_INSTRUCTIONS 2>&1 | tee /var/log/exb_logs/exBOMBER/exBOMBER_"$TIMESTAMP"
# Check for user generated quit request
if [ -f "/root/support/exBOMBER/tmp/QUIT" ]; then

    rm /root/support/exBOMBER/tmp/QUIT
    exit 0

else

    # sed command to remove messy terminal color variables from logs
    sed -i -e 's/[\x01-\x1F\x7F]//g' -e 's|(B\[m||g' -e 's|\[H\[2J||g' -e 's|\[1m\[31m||g' -e 's|\[1m\[32m||g' \
    -e 's|\[1m\[33m||g' -e 's|\[1m\[34m||g' -e 's|\[1m\[35m||g' -e 's|\[1m\[36m||g' -e 's|\[1m\[37m||g' \
    -e 's|\[4m||g' -e 's|\[5m||g' -e 's|\[5A\[K||g' -e 's|\[0m||g' -e 's|\[1A\[K||g' -e 's|\[2A\[K||g' /var/log/exb_logs/exBOMBER/exBOMBER_"$TIMESTAMP"
    clear
    HEADER
    # Pull subshell-generated variables into parent shell
    SCAN_TYPE="$(grep SCAN_TYPE /root/support/exBOMBER/tmp/scan_config | awk '{print $3}')"
    SEARCH_PATHS="$(grep SEARCH_PATHS /root/support/exBOMBER/tmp/scan_config | awk '{print $3}')"
    TURBO_OPTION="$(grep TURBO_OPTION /root/support/exBOMBER/tmp/scan_config | awk '{print $3}')"
    EMAIL_ADDR="$(grep EMAIL_ADDR /root/support/exBOMBER/tmp/scan_config | awk '{print $3}')"
    SUPPORT_ID="$(grep SUPPORT /root/support/exBOMBER/tmp/scan_config | awk '{print $3}')"
    FC_CUSTOM_FLAGS="$(grep FC_CUSTOM /root/support/exBOMBER/tmp/scan_config | awk '{print $3}')"
    if [ "$SCAN_TYPE" = "FB" ]; then

        rm /root/support/exBOMBER/tmp/scan_config # Remove tmp file created during execution
        echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}FINDBOT.PL Scan${NOCOLOR}"
        DIVIDER
        echo -e "    ${GREEN}Starting ${WHITE}FINDBOT.PL${GREEN} Scan...${NOCOLOR}"
        sleep 2

        if [ "$TURBO_OPTION" = "ON" ]; then

            tput cuu 1 && tput el
            echo -e "    ${GREEN}TURBO OPTION ENABLED${NOCOLOR}\n"
            clear
            HEADER
            # Post scan information to terminal prior to detaching scan subshell
            echo -e "    Notification will be sent to ${GREEN}$EMAIL_ADDR${NOCOLOR}\n"
            echo -e "    Upon completion, scan pastefile will be moved to:\n"
            echo -e "                ${WHITE}/var/log/exb_logs/findbot/findbot_pastefile_${GREEN}timestamp${NOCOLOR}\n"
            echo -e "    (Provides fallback results presentation if email fails to send)\n"
            echo -e "    FINDBOT.PL scan progress can be observed with:\n"
            echo -e "                ${WHITE}tail -f /var/log/exb_logs/findbot/turbo_scan_$TIMESTAMP\n\n\n${NOCOLOR}" &
            # Start scan in 'detached' subshell
            DETACH F_TURBO_SEARCH
            exit 0

        else

            tput cuu 1 && tput el
            echo -e "    ${BLUE}TURBO OPTION DISABLED${NOCOLOR}\n"
            clear
            HEADER
            # Post scan information to terminal prior to detaching scan subshell
            echo -e "    Notification will be sent to ${GREEN}$EMAIL_ADDR${NOCOLOR}\n"
            echo -e "    Upon completion, scan pastefile will be moved to:\n"
            echo -e "                ${WHITE}/var/log/exb_logs/findbot/findbot_pastefile_${GREEN}timestamp${NOCOLOR}\n"
            echo -e "    (Provides fallback results presentation if email fails to send)\n"
            echo -e "    FINDBOT.PL scan progress can be observed with:\n"
            echo -e "                ${WHITE}tail -f /var/log/exb_logs/findbot/standard_scan_$TIMESTAMP\n\n\n${NOCOLOR}" &
            # Start scan in 'detached' subshell
            DETACH F_SEARCH
            exit 0
        fi

    elif [ "$SCAN_TYPE" = "MD" ]; then

        rm /root/support/exBOMBER/tmp/scan_config # Remove tmp file created during execution
        echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}MALDET Scan${NOCOLOR}"
        DIVIDER
        echo -e "    ${GREEN}Starting ${WHITE}MALDET${GREEN} Scan..."
        sleep 2
        clear
        HEADER
        # Post scan information to terminal prior to detaching scan subshell
        echo -e "    Notification will be sent to ${GREEN}$EMAIL_ADDR${NOCOLOR}\n"
        echo -e "    Upon completion, scan pastefile will be moved to:\n"
        echo -e "                ${WHITE}/var/log/exb_logs/maldet/maldet_pastefile_${GREEN}timestamp${NOCOLOR}\n"
        echo -e "    (Provides fallback results presentation if notification email fails to send)\n"
        echo -e "    MALDET scan progress can be observed with:\n"
        echo -e "                ${WHITE}tail -f /var/log/exb_logs/maldet/standard_scan_$TIMESTAMP\n\n\n${NOCOLOR}" &
        # Start scan in 'detached' subshell
        DETACH M_SEARCH
        exit 0

    elif [ "$SCAN_TYPE" = "PS" ]; then

        # NEED TO DEVELOP PHP_SITE_SCAN RE: http://www.gregfreeman.org/2013/how-to-tell-if-your-php-site-has-been-compromised/
        rm /root/support/exBOMBER/tmp/scan_config # Remove tmp file created during execution
        echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}PHP Site Scan${NOCOLOR}"
        DIVIDER
        echo -e "    ${YELLOW}IN DEVELOPMENT - CHECK BACK SOON${NOCOLOR}\n\n\n"

    else

        rm /root/support/exBOMBER/tmp/scan_config # Remove tmp file created during execution
        echo -e "    ${WHITE}ex${CYAN}BOMBER ${WHITE}FINDCRACK0R Scan${NOCOLOR}"
        DIVIDER
        echo -e "    ${GREEN}Starting ${WHITE}FINDCRACK0R${GREEN} Scan..."
        sleep 2
        clear
        HEADER
        # Post scan information to terminal prior to detaching scan subshell
        echo -e "    Notification will be sent to ${GREEN}$EMAIL_ADDR${NOCOLOR}\n"
        echo -e "    Upon completion, scan pastefile will be moved to:\n"
        echo -e "                ${WHITE}/var/log/exb_logs/findcrack0r/findcrack0r_pastefile_${GREEN}timestamp${NOCOLOR}\n"
        echo -e "    (Provides fallback results presentation if notification email fails to send)\n"
        echo -e "    FINDCRACK0R scan progress can be observed with:\n"
        echo -e "                ${WHITE}tail -f /var/log/exb_logs/findcrack0r/standard_scan_$TIMESTAMP\n\n\n${NOCOLOR}" &
        # Start scan in 'detached' subshell
        DETACH FC_SEARCH
        exit 0

    fi

fi

#######################
##-------------------##
## END - CORE SCRIPT ##
##-------------------##
#######################

exit 0
