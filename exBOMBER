#!/bin/bash
# exBOMBER
# -------------------------------------------------------
# exBOMBER: A linux server hack/exploit finder
# version: .01
# Github: https://github.com/InterGenStudios
# ---------------------------------------------------
# InterGenStudios: 7-25-15
# Copyright (c) 2015: Christopher 'InterGen' Cork  InterGenStudios
# --------------------------------
# License: GPL-2.0+
# URL: http://opensource.org/licenses/gpl-license.php
# ---------------------------------------------------
# exBOMBER is free software:
# You may redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software
# Foundation, either version 2 of the License, or (at your discretion)
# any later version.
# ------------------


# To Do List
#


###########################################
##---------------------------------------##
## BEGIN - INITIAL VARIABLE DECLARATIONS ##
##---------------------------------------##
###########################################

# Set timestamp
TIMESTAMP="$(date +"%m-%d-%Y:%T")"

RED="\e[1m\e[31m"
GREEN="\e[1m\e[32m"
YELLOW="\e[1m\e[33m"
BLUE="\e[1m\e[34m"
PURPLE="\e[1m\e[35m"
CYAN="\e[1m\e[36m"
WHITE="\e[1m\e[37m"
NOCOLOR="\e[0m"
BLINK="\e[5m"
UNDERLINE_TEXT="\e[4m"

#########################################
##-------------------------------------##
## END - INITIAL VARIABLE DECLARATIONS ##
##-------------------------------------##
#########################################

##############################
##--------------------------##
## BEGIN - SCRIPT FUNCTIONS ##
##--------------------------##
##############################

#----------------------------------#
# BEGIN - DISPLAY LAYOUT FUNCTIONS #
#----------------------------------#

# Simple divider
DIVIDER () {

    echo -e "\n${CYAN}---------------------------------------------------------${NOCOLOR}\n"

}

# Creates uniform look during script execution when called after any clear command
HEADER () {

    echo -e "\n${BLUE}====================================================================================${NOCOLOR}"
    echo -e "${BLUE}===[ ${WHITE}ex${CYAN}BOMBER ${WHITE}version${GREEN}.01 ${BLUE}]================================[ ${WHITE}$TIMESTAMP ${BLUE}]===${NOCOLOR}"
    echo -e "${BLUE}====================================================================================${NOCOLOR}\n\n"

}

#--------------------------------#
# END - DISPLAY LAYOUT FUNCTIONS #
#--------------------------------#

GET_INSTRUCTIONS () {

    clear
    HEADER
    echo -e "    ${GREEN}${UNDERLINE_TEXT}Select an operation${NOCOLOR}:\n\n"
    echo -e "    ${WHITE}1) ${GREEN}Findbot.pl      ${NOCOLOR}(${WHITE}1-i${NOCOLOR} for info)"
    echo -e "    ${WHITE}2) ${GREEN}Maldet          ${NOCOLOR}(${WHITE}2-i${NOCOLOR} for info)"
    echo -e "    ${WHITE}3) ${GREEN}PHP Site Scan   ${NOCOLOR}(${WHITE}3-i${NOCOLOR} for info)\n"
    echo -e -n "    [${WHITE}${UNDERLINE_TEXT}Enter Selection${NOCOLOR}]: "
    read get_instructions
    case $get_instructions in
        1) CHECK_FOR_FINDBOT
           EXEC_FINDBOT
            ;;
        2) CHECK_FOR_MALDET
           EXEC_MALDET
            ;;
        3) PHP_SITE_SCAN
           EXEC_PHP_SITE_SCAN
            ;;
        1-i) FINDBOT_HELPTEXT
            ;;
        2-i) MALDET_HELPTEXT
            ;;
        3-i) PHP_SITE_SCAN_HELPTEXT
            ;;
        *) printf "\n"
           echo -e "    ${RED}${BLINK}INVALID SELECTION${NOCOLOR}\n    Please choose again\n"
           sleep 2
           GET_INSTRUCTIONS
            ;;
    esac
}

FINDBOT_HELPTEXT () {

    clear
    HEADER
    echo -e "    ${WHITE}FINDBOT.PL HELPTEXT${NOCOLOR}"
    DIVIDER
    echo -e "    This script attempts to find malicious files/scripts on your machine. It"
    echo -e "    specifically looks for known documented spambots, as well as ${WHITE}\"suspicious\"${NOCOLOR}"
    echo -e "    constructs in various scripting languages.\n"
    echo -e "    By default, findbot.pl scans the directories ${WHITE}/tmp, /usr/tmp, /home,${NOCOLOR} and"
    echo -e "    ${WHITE}/var/www${NOCOLOR}.  This script isn't fast, so if you know where to look you can"
    echo -e "    speed things up by passing it only the directories that you suspect"
    echo -e "    contain malware.\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}ex${CYAN}BOMBER ${WHITE}FINDBOT.PL Options${NOCOLOR}:\n"
    echo -e "        ${WHITE}ES${NOCOLOR} - Scans the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver"
    echo -e "        ${WHITE}DD${NOCOLOR} - Scans the ${WHITE}D${NOCOLOR}efault ${WHITE}D${NOCOLOR}irectories:"
    echo -e "             ${WHITE}/tmp, /usr/tmp, /home, ${NOCOLOR}and ${WHITE}/var/www${NOCOLOR}"
    echo -e "        ${WHITE}CP${NOCOLOR} - Scans the user provided ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Results${NOCOLOR}:\n"
    echo -e "        There are two types of ${WHITE}\"detections\"${NOCOLOR}:\n"
    echo -e "            ${WHITE}\"suspicious files\"${NOCOLOR} are files that contain things that -may- be"
    echo -e "            malicious.\n"
    echo -e "            ${WHITE}\"malware\"${NOCOLOR} is definitely malicious software.\n\n\n\n\n"
    echo -e -n "    [ ${CYAN}M${NOCOLOR} ] ${WHITE}Menu${NOCOLOR} | [ ${CYAN}Q${NOCOLOR} ] ${WHITE}Quit${NOCOLOR} : "
    read FHT_CHOICE
    case "$FHT_CHOICE" in

        M) GET_INSTRUCTIONS
            ;;
        m) GET_INSTRUCTIONS
            ;;
        Q) printf "\n\n\n"
           exit 0
            ;;
        q) printf "\n\n\n"
           exit 0
            ;;
        *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}"
           sleep 2
           FINDBOT_HELPTEXT
            ;;
    esac

}

MALDET_HELPTEXT () {

    clear
    HEADER
    echo -e "    ${WHITE}MALDET HELPTEXT${NOCOLOR}"
    DIVIDER
    echo -e "    ${BLUE}Detailed Information here${NOCOLOR} ${GREEN}===> ${WHITE}https://www.rfxn.com/appdocs/README.maldetect${NOCOLOR}\n"
    echo -e "    Linux Malware Detect (LMD) is a malware scanner for Linux released under the"
    echo -e "    GNU GPLv2 license, that is designed around the threats faced in shared hosted"
    echo -e "    environments. It uses threat data from network edge intrusion detection systems"
    echo -e "    to extract malware that is actively being used in attacks and generates"
    echo -e "    signatures for detection. In addition, threatdata is also derived from user"
    echo -e "    submissions with the LMD checkout feature and from malware community resources."
    echo -e "    The signatures that LMD uses are MD5 file hashes and HEX pattern matches, they"
    echo -e "    are also easily exported to any number of detection tools such as ClamAV.\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}ex${CYAN}BOMBER ${WHITE}MALDET Options${NOCOLOR}:\n"
    echo -e "        ${WHITE}ES${NOCOLOR} - Scans the ${WHITE}E${NOCOLOR}ntire ${WHITE}S${NOCOLOR}erver"
    echo -e "        ${WHITE}UD${NOCOLOR} - Scans the ${WHITE}U${NOCOLOR}ser ${WHITE}D${NOCOLOR}irectories:"
    echo -e "             ${WHITE}/home/*${NOCOLOR}"
    echo -e "        ${WHITE}CP${NOCOLOR} - Scans the user provided ${WHITE}C${NOCOLOR}ustom ${WHITE}P${NOCOLOR}ath\n"
    echo -e "    ${WHITE}${UNDERLINE_TEXT}Results${NOCOLOR}:\n"
    echo -e "        In addition to Maldet's default logs, ${WHITE}ex${CYAN}BOMBER${NOCOLOR} Maldet scans will be written to:\n"
    echo -e "            ${WHITE}/var/www/exb_logs/maldet/${NOCOLOR}<log>\n"
    echo -e "        A pastebin of the log will also be provided.\n\n\n"
    echo -e -n "    [ ${CYAN}M${NOCOLOR} ] ${WHITE}Menu${NOCOLOR} | [ ${CYAN}Q${NOCOLOR} ] ${WHITE}Quit${NOCOLOR} : "
    read MHT_CHOICE
    case "$MHT_CHOICE" in

        M) GET_INSTRUCTIONS
            ;;
        m) GET_INSTRUCTIONS
            ;;
        Q) printf "\n\n\n"
           exit 0
            ;;
        q) printf "\n\n\n"
           exit 0
            ;;
        *) echo -e "\n    ${RED}${BLINK}INVALID OPTION${NOCOLOR}"
           sleep 2
           MALDET_HELPTEXT
            ;;
    esac

}



############################
##------------------------##
## END - SCRIPT FUNCTIONS ##
##------------------------##
############################

#############################################
##-----------------------------------------##
## BEGIN - MAKE SURE WE'RE RUNNING AS ROOT ##
##-----------------------------------------##
#############################################

if [ "$(id -u)" != "0" ]; then
    echo -e "\n\n${RED}${BLINK}--------${NOCOLOR}"
    echo -e "${RED}${BLINK}WARNING!${NOCOLOR}"
    echo -e "${RED}${BLINK}--------${NOCOLOR}\n\n"
    echo -e "${CYAN}exBOMBER ${WHITE}must be run as ${RED}${UNDERLINE_TEXT}root${NOCOLOR}\n\n"
    echo -e "(Exiting now...)\n\n"
    exit 1
fi

###########################################
##---------------------------------------##
## END - MAKE SURE WE'RE RUNNING AS ROOT ##
##---------------------------------------##
###########################################

#########################
##---------------------##
## BEGIN - CORE SCRIPT ##
##---------------------##
#########################

GET_INSTRUCTIONS


#######################
##-------------------##
## END - CORE SCRIPT ##
##-------------------##
#######################

exit 0
